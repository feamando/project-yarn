{
  "extends": ["./.eslintrc.json"],
  "rules": {
    "react/jsx-pascal-case": ["error", {
      "allowAllCaps": false,
      "allowLeadingUnderscore": false,
      "allowNamespace": false
    }],
    
    "@typescript-eslint/naming-convention": [
      "error",
      {
        "selector": "interface",
        "filter": {
          "regex": "Props$",
          "match": true
        },
        "format": ["PascalCase"],
        "suffix": ["Props"]
      },
      {
        "selector": "typeAlias",
        "filter": {
          "regex": "Props$",
          "match": true
        },
        "format": ["PascalCase"],
        "suffix": ["Props"]
      },
      {
        "selector": "variable",
        "filter": {
          "regex": "^use[A-Z]",
          "match": true
        },
        "format": ["camelCase"],
        "prefix": ["use"]
      },
      {
        "selector": "function",
        "filter": {
          "regex": "^use[A-Z]",
          "match": true
        },
        "format": ["camelCase"],
        "prefix": ["use"]
      }
    ],
    
    "react/jsx-max-depth": ["warn", { "max": 6 }],
    "react/jsx-no-literals": ["warn", {
      "noStrings": false,
      "allowedStrings": ["", " ", ":", ",", ".", "!", "?", "-", "+", "*", "/", "="],
      "ignoreProps": true
    }],
    
    "react/jsx-no-bind": ["error", {
      "ignoreRefs": true,
      "allowArrowFunctions": true,
      "allowFunctions": false,
      "allowBind": false
    }],
    "react/no-array-index-key": "error",
    "react/jsx-no-useless-fragment": ["error", {
      "allowExpressions": true
    }],
    
    "jsx-a11y/no-autofocus": ["error", {
      "ignoreNonDOM": true
    }],
    "jsx-a11y/click-events-have-key-events": "error",
    "jsx-a11y/no-static-element-interactions": ["error", {
      "handlers": [
        "onClick",
        "onMouseDown",
        "onMouseUp",
        "onKeyPress",
        "onKeyDown",
        "onKeyUp"
      ]
    }],
    
    "react-hooks/exhaustive-deps": ["error", {
      "additionalHooks": "(useCallback|useMemo)"
    }],
    
    "@typescript-eslint/explicit-function-return-type": ["warn", {
      "allowExpressions": true,
      "allowTypedFunctionExpressions": true,
      "allowHigherOrderFunctions": true,
      "allowDirectConstAssertionInArrowFunctions": true,
      "allowConciseArrowFunctionExpressionsStartingWithVoid": true
    }],
    
    "sort-imports": ["error", {
      "ignoreCase": false,
      "ignoreDeclarationSort": true,
      "ignoreMemberSort": false,
      "memberSyntaxSortOrder": ["none", "all", "multiple", "single"],
      "allowSeparatedGroups": true
    }],
    
    "react/require-default-props": "off",
    "react/default-props-match-prop-types": "off",
    
    "prefer-const": "error",
    "no-param-reassign": ["error", {
      "props": true,
      "ignorePropertyModificationsFor": ["state", "draft"]
    }]
  },
  
  "overrides": [
    {
      "files": ["src/components/ui/**/*.tsx"],
      "rules": {
        "react/jsx-props-no-spreading": "error",
        "react/jsx-max-props-per-line": ["error", { "maximum": 1, "when": "multiline" }],
        "react/jsx-sort-props": ["error", {
          "callbacksLast": true,
          "shorthandFirst": true,
          "ignoreCase": true,
          "reservedFirst": true
        }],
        "@typescript-eslint/explicit-function-return-type": "error"
      }
    },
    {
      "files": ["src/components/common/**/*.tsx"],
      "rules": {
        "react/jsx-props-no-spreading": "warn",
        "react/jsx-max-props-per-line": ["warn", { "maximum": 2, "when": "multiline" }]
      }
    },
    {
      "files": ["src/components/features/**/*.tsx"],
      "rules": {
        "react/jsx-props-no-spreading": "off",
        "react/jsx-max-props-per-line": ["warn", { "maximum": 3, "when": "multiline" }],
        "max-lines-per-function": ["warn", { "max": 150 }]
      }
    },
    {
      "files": ["src/components/performance/**/*.tsx"],
      "rules": {
        "react/jsx-props-no-spreading": "off",
        "react/jsx-no-bind": "off",
        "max-lines-per-function": "off",
        "complexity": "off",
        "@typescript-eslint/no-explicit-any": "warn"
      }
    },
    {
      "files": ["src/hooks/**/*.ts", "src/hooks/**/*.tsx"],
      "rules": {
        "react-hooks/rules-of-hooks": "error",
        "react-hooks/exhaustive-deps": "error",
        "@typescript-eslint/explicit-function-return-type": "warn",
        "prefer-const": "error",
        "no-param-reassign": ["error", {
          "props": true,
          "ignorePropertyModificationsFor": ["state", "draft", "acc"]
        }]
      }
    }
  ]
}
